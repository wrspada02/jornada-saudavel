// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model ObjetivoEspecialidade {
  id            String          @id @default(uuid())
  nome          String
  usuarios      Usuario[]
  nutricionista Nutricionista[]
}

model Usuario {
  id                   String                @id @default(uuid())
  nome                 String
  data_nasc            DateTime
  tipo_atividade       String
  altura               Float?
  peso                 Float?
  email String
  imagem_url           String?               @default("https://archive.org/download/placeholder-image/placeholder-image.jpg")
  frequencia_atividade Int?
  objetivo             ObjetivoEspecialidade @relation(fields: [objetivo_id], references: [id])
  objetivo_id          String
  seguidor             Seguidor[]
  comentario           Comentario?
}

model Nutricionista {
  id               String                @id @default(uuid())
  crn              String
  nome             String
  sobre            String
  email String            
  data_nasc        DateTime
  imagem_url       String?               @default("https://archive.org/download/placeholder-image/placeholder-image.jpg")
  tempo_exp        Int
  especialidade    ObjetivoEspecialidade @relation(fields: [especialidade_id], references: [id])
  especialidade_id String
  seguidores       Seguidor[]
  post             Post[]
}

model Seguidor {
  usuario          Usuario       @relation(fields: [usuario_id], references: [id])
  usuario_id       String
  nutricionista    Nutricionista @relation(fields: [nutricionista_id], references: [id])
  nutricionista_id String

  @@id([usuario_id, nutricionista_id])
}

model Post {
  id               String        @id @default(uuid())
  tipo             Int
  titulo           String
  subtitulo        String
  conteudo         String
  data_publicacao  DateTime
  imagem_url       String?       @default("https://archive.org/download/placeholder-image/placeholder-image.jpg")
  qtd_likes        Int
  qtd_comentarios  Int
  nutricionista    Nutricionista @relation(fields: [nutricionista_id], references: [id])
  nutricionista_id String
  comentarios      Comentario[]
}

model Comentario {
  id         String  @id @default(uuid())
  conteudo   String
  post       Post    @relation(fields: [post_id], references: [id])
  post_id    String
  usuario    Usuario @relation(fields: [usuario_id], references: [id])
  usuario_id String  @unique
}
